import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime


bot = telebot.TeleBot("8157830738:AAENZ5upaAIkRe6EHmelbVi1iOKwpD_bOxo")

CHANNEL_USERNAME = "lolvalsvo"  # –ü—É–±–ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª –±–µ–∑ "@"
MANAGERS_CHAT_ID = -1002505424671  # ID –≥—Ä—É–ø–ø—ã —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏

user_data = {}

#–ü—Ä–æ–≤–µ—Ä–∫–∞
def is_subscribed(user_id):
    try:
        member = bot.get_chat_member(f"@{CHANNEL_USERNAME}", user_id)
        return member.status in ['member', 'creator', 'administrator']
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:", e)
        return False


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    user_data[user_id] = {}

    if is_subscribed(user_id):
        choose_discount(user_id)
    else:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME}"))
        bot.send_message(user_id,
                         f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>! –Ø –±–æ—Ç <b>‚ú®–û–†–ì–ê–ù–ò–ö –°–ü–ê‚ú®</b> ü§ó\n\n"
                         f"<b>–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–∫–∏–¥–∫–∏ –Ω–∞ –º–∞—Å—Å–∞–∂ –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤!</b>\n\n"
                         f"üì¢ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <b>@{CHANNEL_USERNAME}</b>\n"
                         f"–ó–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ <b>/start</b> —Å–Ω–æ–≤–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
                         reply_markup=markup, parse_mode='HTML')

# –í—ã–±–æ—Ä —Å–∫–∏–¥–∫–∏
def choose_discount(user_id):
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(
        InlineKeyboardButton("–°–∫–∏–¥–∫–∞ 15% –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ", callback_data='discount_15'),
        InlineKeyboardButton("–ë–∞–ª–∏–π—Å–∫–∏–π –º–∞—Å—Å–∞–∂ —Å–æ —Å–∫–∏–¥–∫–æ–π 35%", callback_data='discount_35')
    )
    bot.send_message(user_id,
                     "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!\n\n"
                     "–ß—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–∫–∏–¥–∫—É, –æ—Ç–≤–µ—Ç—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞ üòä\n\n"
                     "<u>1. –í–æ–ø—Ä–æ—Å:</u>\n–ö–∞–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                     reply_markup=markup, parse_mode='HTML')


@bot.callback_query_handler(func=lambda call: call.data.startswith("discount_"))
def handle_discount(call):
    user_id = call.message.chat.id
    if call.data == "discount_15":
        user_data[user_id]['discount'] = "–°–∫–∏–¥–∫–∞ 15% –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ"
    elif call.data == "discount_35":
        user_data[user_id]['discount'] = "–ë–∞–ª–∏–π—Å–∫–∏–π –º–∞—Å—Å–∞–∂ —Å–æ —Å–∫–∏–¥–∫–æ–π 35%"

    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(
        InlineKeyboardButton("–ß–µ—Ä–µ–∑ 3 –¥–Ω—è", callback_data='time_3days'),
        InlineKeyboardButton("–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ", callback_data='time_thisweek'),
        InlineKeyboardButton("–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ", callback_data='time_nextweek'),
        InlineKeyboardButton("–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ", callback_data='time_month')
    )
    bot.edit_message_text(chat_id=user_id,
                          message_id=call.message.message_id,
                          text="<u>2. –í–æ–ø—Ä–æ—Å:</u>\n–ö–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–ª–æ–Ω?\n\nüìÖ "
                               "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (–≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è)",
                          reply_markup=markup, parse_mode='HTML')

#–≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith("time_"))
def handle_time(call):
    user_id = call.message.chat.id
    time_map = {
        'time_3days': "–ß–µ—Ä–µ–∑ 3 –¥–Ω—è",
        'time_thisweek': "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ",
        'time_nextweek': "–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ",
        'time_month': "–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ"
    }
    user_data[user_id]['visit_time'] = time_map.get(call.data, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    # bot.send_message(user_id,
    #                  "<u>3. –í–æ–ø—Ä–æ—Å:</u>\n–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏\n\n"
    #                  "üì≤ –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
    #                  "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é, –Ω–∞—á–∏–Ω–∞—è —Å +7 –∏–ª–∏ 8.\n\n"
    #                  "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–±–µ—Ä—ë—Ç —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –∑–∞–ø–∏—à–µ—Ç –≤–∞—Å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏ ‚úçÔ∏è",
    #                  parse_mode='HTML')
    get_phone(call.message)

#–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def get_phone(message):
    # user_data[message.chat.id]['visit_time'] = message.text
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True))
    bot.send_message(message.chat.id,
                     "<b>3. –í–æ–ø—Ä–æ—Å:</b>\n–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏\n\n"
                     "üì≤ –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
                     "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª</b> –Ω–∏–∂–µ üëá\n\n"
                     "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–±–µ—Ä—ë—Ç —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –∑–∞–ø–∏—à–µ—Ç –≤–∞—Å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏ ‚úçÔ∏è",
                     reply_markup=markup, parse_mode='HTML')


@bot.message_handler(content_types=['contact'])
def contact_handler(message):
    contact = message.contact.phone_number
    user_data[message.chat.id]['phone'] = contact if contact.startswith('+') else f"+{contact}"
    send_final_message(message)


@bot.message_handler(func=lambda m: m.chat.type == 'private')
def fallback(message):
    try:
        if ((message.text.startswith("+7") and len(message.text) == 12) or
                (message.text.startswith("8") and len(message.text) == 11)):
            user_data[message.chat.id]['phone'] = message.text
            send_final_message(message)
        else:
            bot.send_message(message.chat.id,
                             "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        bot.send_message(message.chat.id,
                         "‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞.")
        print("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞", message.chat.id, e)

def save_user(user_id):
    with open("users.txt", "a", encoding="utf-8") as f:
        now = datetime.now()
        dt_string = now.strftime("%d/%m/%Y %H:%M:%S")
        f.write(f"{str(user_id)} {dt_string} \n")

# –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
def send_final_message(message):
    bot.send_message(message.chat.id,
                     f"üéâ –°–ø–∞—Å–∏–±–æ, <b>{message.from_user.first_name}</b>!\n\n"
                     f"–°–∫–∏–¥–∫–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –∑–∞ –≤–∞–º–∏ ‚úÖ\n"
                     f"–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üìû\n\n"
                     f"–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ <b>–û–†–ì–ê–ù–ò–ö –°–ü–ê</b>! üåø",
                     parse_mode='HTML',
                     reply_markup=ReplyKeyboardRemove())

    info = user_data[message.chat.id]
    save_user(info['phone'])
    full_text = (
        f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{message.from_user.username or message.from_user.first_name}:\n"
        f"–°–∫–∏–¥–∫–∞: {info['discount']}\n"
        f"–î–∞—Ç–∞ –≤–∏–∑–∏—Ç–∞: {info['visit_time']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {info['phone']}"
    )

    bot.send_message(MANAGERS_CHAT_ID, full_text)


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
bot.polling(none_stop=True)
